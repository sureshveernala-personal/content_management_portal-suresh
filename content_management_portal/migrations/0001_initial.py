# Generated by Django 3.0.5 on 2020-06-29 15:05

import content_management_portal.models.test_case
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_by_id', models.IntegerField()),
                ('short_text', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('TEXT', 'TEXT'), ('HTML', 'HTML'), ('MARKDOWN', 'MARKDOWN')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_case_number', models.IntegerField()),
                ('input', models.TextField()),
                ('output', models.TextField()),
                ('score', models.IntegerField(validators=[content_management_portal.models.test_case.validate_postive])),
                ('is_hidden', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_cases', to='content_management_portal.Question')),
            ],
        ),
        migrations.CreateModel(
            name='SolutionApproach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description_content', models.TextField()),
                ('description_content_type', models.CharField(choices=[('TEXT', 'TEXT'), ('HTML', 'HTML'), ('MARKDOWN', 'MARKDOWN')], max_length=100)),
                ('complexity_analysis_content', models.TextField()),
                ('complexity_analysis_content_type', models.CharField(choices=[('TEXT', 'TEXT'), ('HTML', 'HTML'), ('MARKDOWN', 'MARKDOWN')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='solution_approach', to='content_management_portal.Question')),
            ],
        ),
        migrations.CreateModel(
            name='RoughSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('PYTHON', 'PYTHON'), ('C', 'C'), ('CPP', 'CPP'), ('CS', 'CS'), ('JAVASCRIPT', 'JAVASCRIPT'), ('JAVA', 'JAVA'), ('PHP', 'PHP'), ('RUBY', 'RUBY')], max_length=100)),
                ('solution_content', models.TextField()),
                ('file_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rough_solutions', to='content_management_portal.Question')),
            ],
        ),
        migrations.CreateModel(
            name='PrefilledCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('PYTHON', 'PYTHON'), ('C', 'C'), ('CPP', 'CPP'), ('CS', 'CS'), ('JAVASCRIPT', 'JAVASCRIPT'), ('JAVA', 'JAVA'), ('PHP', 'PHP'), ('RUBY', 'RUBY')], max_length=100)),
                ('solution_content', models.TextField()),
                ('file_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prefilled_codes', to='content_management_portal.Question')),
            ],
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hint_number', models.IntegerField()),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('content_type', models.CharField(choices=[('TEXT', 'TEXT'), ('HTML', 'HTML'), ('MARKDOWN', 'MARKDOWN')], max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hints', to='content_management_portal.Question')),
            ],
        ),
        migrations.CreateModel(
            name='CleanSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('PYTHON', 'PYTHON'), ('C', 'C'), ('CPP', 'CPP'), ('CS', 'CS'), ('JAVASCRIPT', 'JAVASCRIPT'), ('JAVA', 'JAVA'), ('PHP', 'PHP'), ('RUBY', 'RUBY')], max_length=100)),
                ('solution_content', models.TextField()),
                ('file_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clean_solutions', to='content_management_portal.Question')),
            ],
        ),
    ]
